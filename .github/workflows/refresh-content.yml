name: Refresh Content

on:
  schedule:
    # Run every 4 hours: 6 AM, 10 AM, 2 PM, 6 PM, 10 PM UTC
    - cron: '0 6,10,14,18,22 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  refresh:
    runs-on: ubuntu-latest
    steps:
      - name: Refresh Fantasy Red Zone Content
        run: |
          echo "üîÑ Starting Fantasy Red Zone content refresh..."
          echo "üìç Site URL: ${{ secrets.SITE_URL }}"
          echo "‚è∞ Timestamp: $(date -u)"
          
          # Check if required secrets are set
          if [ -z "${{ secrets.SITE_URL }}" ]; then
            echo "‚ùå Error: SITE_URL secret is not set"
            exit 1
          fi
          
          if [ -z "${{ secrets.CRON_SECRET }}" ]; then
            echo "‚ùå Error: CRON_SECRET is not set"
            exit 1
          fi
          
          # Make the API call with proper error handling
          RESPONSE=$(curl -s -w "\n%{http_code}" \
            -X GET \
            -H "Content-Type: application/json" \
            -H "User-Agent: GitHub-Actions-Content-Refresh" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            "${{ secrets.SITE_URL }}/api/scheduler/cron")
          
          # Extract HTTP status code and response body
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | head -n -1)
          
          echo "üìä HTTP Status: $HTTP_CODE"
          echo "üìÑ Response: $BODY"
          
          # Check if the request was successful
          if [ "$HTTP_CODE" -eq 200 ]; then
            echo "‚úÖ Content refresh completed successfully!"
            
            # Parse response to show details
            if echo "$BODY" | grep -q '"ingestionTriggered":true'; then
              echo "üîÑ Ingestion was triggered"
            else
              echo "‚è∞ Ingestion was not needed (not yet scheduled)"
            fi
          else
            echo "‚ùå Content refresh failed with HTTP $HTTP_CODE"
            echo "üîç Response details: $BODY"
            exit 1
          fi
          
          echo "‚úÖ Refresh job completed at $(date -u)"
